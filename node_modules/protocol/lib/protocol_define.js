// generated by pcg, DO NOT modify manually.
class ProtocolBase {
	constructor(proto){
		this.protocol = proto
	}
	Pack(packer, clear){
		if(clear){
			packer.reset();
		}
		packer.packProtoID(this.protocol);
	}
}
exports.ProtocolBase = ProtocolBase

let COM_GAME_FRAMEWORK = {
	eCOM_GAME_FRAMEWORK_BEGIN : 0,

	eC2S_Login : 1,
	eS2C_Json : 2,

	eCOM_GAME_FRAMEWORK_END : 3,
	eCOM_GAME_FRAMEWORK_MAX : 4,
}
exports.COM_GAME_FRAMEWORK = COM_GAME_FRAMEWORK

exports.ProtoNameMap = {
	[COM_GAME_FRAMEWORK.eC2S_Login] : "C2S_Login",
	[COM_GAME_FRAMEWORK.eS2C_Json] : "S2C_Json",
}

exports.ProtocolMD5 = [ 0x16, 0x13, 0xde, 0x1c, 0x34, 0x97, 0x7c, 0x74, 0xd4, 0xa7, 0x1f, 0xd3, 0xe2, 0x2b, 0x92, 0x89 ]

class SPlayerData {
/*
	uint64_t id;
	uint32_t dbid;
	uint32_t sex;
	std::string nick_name;
	std::string head_img;
	uint64_t gold;
	uint64_t score;
	uint64_t redbag;
	uint32_t sign_cnt;
	std::string sign_date;
	uint64_t total_charge;
	uint64_t total_catch;
	uint64_t total_catch_succ;
	uint64_t total_cost;
	std::string share_date;
	std::string share_sign_date;
	uint32_t vip;
	uint32_t vip_charge;
	std::string vip_expire_date;
	std::string vip_login_date;
	uint32_t growth;
	uint32_t growth_level;
	uint64_t gold_pay;
	uint64_t catch_ticket;
	std::string device;
	uint32_t pay_flag;
	uint64_t hoodle;
	uint64_t game_redbag;
	uint64_t total_play;
	uint64_t total_charge_hoodle;
*/

	constructor(){
		this.id = 0
		this.dbid = 0
		this.sex = 0
		this.nick_name = ""
		this.head_img = ""
		this.gold = 0
		this.score = 0
		this.redbag = 0
		this.sign_cnt = 0
		this.sign_date = ""
		this.total_charge = 0
		this.total_catch = 0
		this.total_catch_succ = 0
		this.total_cost = 0
		this.share_date = ""
		this.share_sign_date = ""
		this.vip = 0
		this.vip_charge = 0
		this.vip_expire_date = ""
		this.vip_login_date = ""
		this.growth = 0
		this.growth_level = 0
		this.gold_pay = 0
		this.catch_ticket = 0
		this.device = ""
		this.pay_flag = 0
		this.hoodle = 0
		this.game_redbag = 0
		this.total_play = 0
		this.total_charge_hoodle = 0
	}

	Pack(packer, clear){
		if (clear)	packer.reset();

		packer.packUInt64(30);
		packer.packUInt64(this.id);
		packer.packUInt64(this.dbid);
		packer.packUInt64(this.sex);
		packer.packString(this.nick_name);
		packer.packString(this.head_img);
		packer.packUInt64(this.gold);
		packer.packUInt64(this.score);
		packer.packUInt64(this.redbag);
		packer.packUInt64(this.sign_cnt);
		packer.packString(this.sign_date);
		packer.packUInt64(this.total_charge);
		packer.packUInt64(this.total_catch);
		packer.packUInt64(this.total_catch_succ);
		packer.packUInt64(this.total_cost);
		packer.packString(this.share_date);
		packer.packString(this.share_sign_date);
		packer.packUInt64(this.vip);
		packer.packUInt64(this.vip_charge);
		packer.packString(this.vip_expire_date);
		packer.packString(this.vip_login_date);
		packer.packUInt64(this.growth);
		packer.packUInt64(this.growth_level);
		packer.packUInt64(this.gold_pay);
		packer.packUInt64(this.catch_ticket);
		packer.packString(this.device);
		packer.packUInt64(this.pay_flag);
		packer.packUInt64(this.hoodle);
		packer.packUInt64(this.game_redbag);
		packer.packUInt64(this.total_play);
		packer.packUInt64(this.total_charge_hoodle);
	}

	Unpack(packer){
		let __rec_count__ = packer.unpackNumber()

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.id = packer.unpackNumber()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.dbid = packer.unpackNumber()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.sex = packer.unpackNumber()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.nick_name = packer.unpackString()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.head_img = packer.unpackString()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.gold = packer.unpackNumber()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.score = packer.unpackNumber()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.redbag = packer.unpackNumber()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.sign_cnt = packer.unpackNumber()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.sign_date = packer.unpackString()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.total_charge = packer.unpackNumber()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.total_catch = packer.unpackNumber()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.total_catch_succ = packer.unpackNumber()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.total_cost = packer.unpackNumber()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.share_date = packer.unpackString()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.share_sign_date = packer.unpackString()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.vip = packer.unpackNumber()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.vip_charge = packer.unpackNumber()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.vip_expire_date = packer.unpackString()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.vip_login_date = packer.unpackString()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.growth = packer.unpackNumber()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.growth_level = packer.unpackNumber()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.gold_pay = packer.unpackNumber()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.catch_ticket = packer.unpackNumber()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.device = packer.unpackString()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.pay_flag = packer.unpackNumber()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.hoodle = packer.unpackNumber()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.game_redbag = packer.unpackNumber()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.total_play = packer.unpackNumber()
		}

		if (__rec_count__ > 0){
			__rec_count__ = __rec_count__ - 1
			this.total_charge_hoodle = packer.unpackNumber()
		}

	}

}
exports.SPlayerData = SPlayerData

class C2S_Login extends ProtocolBase {
/*
	std::string token;
*/

	constructor(){
		super(COM_GAME_FRAMEWORK.eC2S_Login)
		this.token = ""
	}

	Pack(packer){
		super.Pack(packer, true)

		packer.packString(this.token);
	}

	Unpack(packer){
		this.token = packer.unpackString()
	}

}
exports.C2S_Login = C2S_Login

class S2C_Json extends ProtocolBase {
/*
	std::string json;
*/

	constructor(){
		super(COM_GAME_FRAMEWORK.eS2C_Json)
		this.json = ""
	}

	Pack(packer){
		super.Pack(packer, true)

		packer.packString(this.json);
	}

	Unpack(packer){
		this.json = packer.unpackString()
	}

}
exports.S2C_Json = S2C_Json


