const Dispatcher = require("./dispatcher")
let WebSocket = require("ws")


class Net_Server extends Dispatcher{

	constructor(name, proto){
		super(proto);
		this._name = name
	}

	start(host, port){
		this._ws = new WebSocket.Server({host: host, port: port});
		let self = this

		this._ws.on('connection', function connection(ws) {
            ws.on('message', function (data) {
            	try{
            		self.procMsg(ws, data)
            	} catch(err) {
            		console.log(err);
            	}
            });

            ws.on('error', function (err) {
            	ws.close()
            });

            ws.on("close", function(err) {
                self.onCloseConnection(ws)
            });
            
            ws.sendMsg = function(msg){
                msg.Pack(self._msgPacker)
                ws.send(self._msgPacker.getBuffer())
            }
            
        });

        this._ws.on("listening", function(){
        	console.log(`${self._name} start at ${host}:${port}`);
        });
	}

	close(){
		if(this._ws) this._ws.close();
		this._ws = null;
	}
}

module.exports = Net_Server;