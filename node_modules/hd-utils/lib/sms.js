const https = require('https');
const util = require('util');
const crypto = require('crypto');
let GetMD5_PHP = (str) =>{
	let md5sum = crypto.createHash('md5');
	md5sum.update(new Buffer(str));
	let ret = md5sum.digest('hex');
	return ret;
}

let IsNullOrEmpty = function(str) {
	return str === 'undefined' || str === undefined || str === null || str === '';
}

Date.prototype.Format = function (fmt) {
	let o = {
		"M+": this.getMonth() + 1, //月份 
		"d+": this.getDate(), //日 
		"h+": this.getHours(), //小时 
		"m+": this.getMinutes(), //分 
		"s+": this.getSeconds(), //秒 
		"q+": Math.floor((this.getMonth() + 3) / 3), //季度 
		"S": this.getMilliseconds() //毫秒 
	};
	if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
	for (let k in o)
	if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
	return fmt;
}

let  GetDate = function(mat){
	return new Date().Format(mat);
}

// 调用接口发送短消息
exports.SendSMSCode = function (param, smsConfig){
	let date = GetDate('yyyyMMddhhmmss');
	let jsondata = util.format("{templateSMS:{appId:%s,templateId:%s,to:%s,param:'%s'}}",
		smsConfig.appId, smsConfig.templateid, param.phone, param.argv);
	let md5code = GetMD5_PHP(smsConfig.accountSid + smsConfig.accountToken + date).toUpperCase();
	let Authorization = new Buffer(smsConfig.accountSid + ":" + date).toString('base64');

	let path = util.format("/%s/Accounts/%s/Messages/templateSMS?sig=%s", smsConfig.softVer, smsConfig.accountSid, md5code);

	let opt = 
	{  
        method: "POST",  
        host: "api.ucpaas.com",  
        port: 443,
        path: path,  
        headers: 
		{
			'Authorization': Authorization,
            'Accept': 'application/json',
			'Content-Type': 'application/json;charset=utf-8;',
			'Content-Length': jsondata.length
        }  
    };  

	let req = https.request(opt, function (serverFeedback) 
	{  
        if (serverFeedback.statusCode == 200) 
		{  
            let body = "";  
            serverFeedback.on('data', function (data)
			{ 
				body += data; 
			});
			
			serverFeedback.on('end', function () 
			{
				let result = JSON.parse(body)
				if (!IsNullOrEmpty(param.cb))
					param.cb(result.resp.respCode);
			});  
        }
        else
		{  
			console.log("500 error");
        }  
    });
    req.write(jsondata);  
    req.end();
}