const util   = require('util')
const http = require("http")
const crypto = require('crypto')

let sendHttpsPostRequest = function (path, content, callback) {
    let options = {  
        method: "POST",  
        host: "sku.ooxxp.com",  
        port: 80,  
        path: path,
        headers: {  
            "Content-Type": 'application/json',  
        }  
    };  

    let reqq = http.request(options, function(ress){
    	var resdata = ""
        ress.setEncoding('utf8');
        ress.on('data', function(data){
            resdata += data
        });
        ress.on('error', function(err){
            callback(err, null);
        });
        ress.on('end', function(err){
            callback(null, resdata);
        });
    });

    reqq.on('error', function(err){
        callback(err,null);
    });

    reqq.write(content);
    reqq.end();
}

class SkuAPI {
	constructor(sku_cfg){
		this.sdk_appid = sku_cfg.sdk_appid
        this.sdk_appsecret = sku_cfg.sdk_appsecret
	}

 //    提交订单信息
 //    接口地址:
 //    /api/order
 //    请求方式:
 //    post
 //    content-type:application/json
 //    merchantId string  是   24  商户id（appId） 5a430bb300016900a8c01f94
 //    skuId   string  是       skuid   
 //    playerId    string  是   32  玩家id    
 //    playerName  string  是   32  玩家名称    
 //    receiverName    string  是   32  收货人 
 //    receiverPhone   string  是   32  收货人联系方式 
 //    receiverProvince    string  是   32  收货人省份   
 //    receiverCity    string  是   32  收货人城市   
 //    receiverArea    string  是   32  收货人区    
 //    receiverAddress string  是   32  收货人详细街道地址   
 //    orderItems  string[]    是       订单详情。商户抓取id数组，即tradeno[]。参与签名是使用：
 //    orderItems1=value1&orderItems2=value2
 //    的方式进行拼接 
 //    notfiyurl   string  否   128 订单状态变更商户异步通知地址  
 //    timestamp   int 是       时间戳，时间戳自 1970 年 1 月 1 日（00:00:00 GMT）以来的秒数  1514640036
 //    sign    string  是   32  根据签名规则计算出的。详见

    genSign(params){
        let noSignStr = ""
        for (let key of Object.keys(params).sort()) {
            let value = params[key]
            if(value instanceof Array){
                for(let i = 1; i < value.length; i++){
                    noSignStr = noSignStr + util.format("%s%d=%s&", key, i, value[i])
                }
            }
            else
                noSignStr = noSignStr + util.format("%s=%s&",key,params[key]);
        }
        noSignStr = noSignStr + util.format("key=%s", this.sdk_appsecret);
        noSignStr = noSignStr.toLocaleLowerCase();

        console.log(noSignStr)
        let md5 = crypto.createHash('md5');
        let sign = md5.update((new Buffer(noSignStr)).toString("utf8")).digest('hex').toLocaleLowerCase();
        return sign
    }

    submitFetch(params, callback){
        params.merchantId = this.sdk_appid
        if (params.skuId == null) return callback("skuId is null");
        if (params.tradeNo == null) return callback("tradeNo is null");
        if (params.playerId == null) return callback("playerId is null");
        if (params.playerName == null) return callback("playerName is null");
        if (params.fetchTime == null) return callback("fetchTime is null");
        params.timestamp = Math.floor(new Date().getTime() / 1000)
        params.sign = this.genSign(params)
        console.log(params)
        sendHttpsPostRequest("/api/fetch", JSON.stringify(params), callback)
    }

    submitOrder(params, callback){
        params.merchantId = this.sdk_appid
        if (params.playerId == null) return callback("playerId is null");
        if (params.playerName == null) return callback("playerName is null");
        if (params.receiverName == null) return callback("receiverName is null");
        if (params.receiverPhone == null) return callback("receiverPhone is null");
        if (params.receiverProvince == null) return callback("receiverProvince is null");
        if (params.receiverCity == null) return callback("receiverCity is null");
        if (params.receiverArea == null) return callback("receiverArea is null");
        if (params.receiverAddress == null) return callback("receiverAddress is null");
        params.timestamp = Math.floor(new Date().getTime() / 1000)
        params.sign = this.genSign(params)

        console.log(params)

        sendHttpsPostRequest("/api/order", JSON.stringify(params), callback)
    }


}

module.exports = SkuAPI;